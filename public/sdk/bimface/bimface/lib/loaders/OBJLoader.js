"use strict";THREE.OBJLoader=function(){function t(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasNormalIndices:!1,hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(r>=0?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addFaceNormal:function(t,e,r){var i=this.vertices,s=this.object.geometry.normals;o.fromArray(i,t),n.fromArray(i,e),l.fromArray(i,r),c.subVectors(l,n),h.subVectors(o,n),c.cross(h),c.normalize(),s.push(c.x,c.y,c.z),s.push(c.x,c.y,c.z),s.push(c.x,c.y,c.z)},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;void 0!==i[t]&&s.push(i[t+0],i[t+1],i[t+2]),void 0!==i[e]&&s.push(i[e+0],i[e+1],i[e+2]),void 0!==i[r]&&s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addDefaultUV:function(){var t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,o,n,l){var h=this.vertices.length,c=this.parseVertexIndex(t,h),u=this.parseVertexIndex(e,h),m=this.parseVertexIndex(r,h);if(this.addVertex(c,u,m),this.addColor(c,u,m),void 0!==o&&""!==o){var p=this.normals.length;c=this.parseNormalIndex(o,p),u=this.parseNormalIndex(n,p),m=this.parseNormalIndex(l,p),this.addNormal(c,u,m),this.object.geometry.hasNormalIndices=!0}else this.addFaceNormal(c,u,m);if(void 0!==i&&""!==i){var d=this.uvs.length;c=this.parseUVIndex(i,d),u=this.parseUVIndex(s,d),m=this.parseUVIndex(a,d),this.addUV(c,u,m),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));for(var o=0,a=e.length;o<a;o++)this.addUVLine(this.parseUVIndex(e[o],i))}};return t.startObject("",!1),t}function e(t){THREE.Loader.call(this,t),this.materials=null}var r=/^[og]\s*(.+)?/,i=/^mtllib /,s=/^usemtl /,a=/^usemap /,o=new THREE.Vector3,n=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,c=new THREE.Vector3;return e.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:e,load:function(t,e,r,i){var s=this,a=new THREE.FileLoader(s.manager);a.setPath(this.path),a.load(t,function(r){try{e(s.parse(r))}catch(e){i?i(e):console.error(e),s.manager.itemError(t)}},r,i)},setPath:function(t){return this.path=t,this},setMaterials:function(t){return this.materials=t,this},parse:function(e){var o=new t;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));for(var n=e.split("\n"),l="",h="",c=[],u="function"==typeof"".trimLeft,m=0,p=n.length;m<p;m++)if(l=n[m],l=u?l.trimLeft():l.trim(),0!==l.length&&"#"!==(h=l.charAt(0)))if("v"===h){var d=l.split(/\s+/);switch(d[0]){case"v":o.vertices.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3])),d.length>=7?o.colors.push(parseFloat(d[4]),parseFloat(d[5]),parseFloat(d[6])):o.colors.push(void 0,void 0,void 0);break;case"vn":o.normals.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3]));break;case"vt":o.uvs.push(parseFloat(d[1]),parseFloat(d[2]))}}else if("f"===h){for(var f=l.substr(1).trim(),v=f.split(/\s+/),g=[],b=0,E=v.length;b<E;b++){var y=v[b];if(y.length>0){var j=y.split("/");g.push(j)}}for(var x=g[0],b=1,E=g.length-1;b<E;b++){var T=g[b],V=g[b+1];o.addFace(x[0],T[0],V[0],x[1],T[1],V[1],x[2],T[2],V[2])}}else if("l"===h){var R=l.substring(1).trim().split(" "),H=[],w=[];if(-1===l.indexOf("/"))H=R;else for(var L=0,I=R.length;L<I;L++){var M=R[L].split("/");""!==M[0]&&H.push(M[0]),""!==M[1]&&w.push(M[1])}o.addLineGeometry(H,w)}else if("p"===h){var f=l.substr(1).trim(),F=f.split(" ");if("arm"==F[0])continue;o.addPointGeometry(F)}else if(null!==(c=r.exec(l))){var z=(" "+c[0].substr(1).trim()).substr(1);o.startObject(z)}else if(s.test(l))o.object.startMaterial(l.substring(7).trim(),o.materialLibraries);else if(i.test(l))o.materialLibraries.push(l.substring(7).trim());else if(a.test(l))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===h){if(c=l.split(" "),c.length>1){var A=c[1].trim().toLowerCase();o.object.smooth="0"!==A&&"off"!==A}else o.object.smooth=!0;var P=o.object.currentMaterial();P&&(P.smooth=o.object.smooth)}else if("\0"===l)continue;o.finalize();var U=new THREE.Group;U.materialLibraries=[].concat(o.materialLibraries);for(var m=0,p=o.objects.length;m<p;m++){var N=o.objects[m],B=N.geometry,C=N.materials,O="Line"===B.type,_="Points"===B.type,G=!1;if(0!==B.vertices.length){var S=new THREE.BufferGeometry;S.addAttribute("position",new THREE.Float32BufferAttribute(B.vertices,3)),!0===B.hasNormalIndices&&S.addAttribute("normal",new THREE.Float32BufferAttribute(B.normals,3)),B.colors.length>0&&(G=!0,S.addAttribute("color",new THREE.Float32BufferAttribute(B.colors,3))),!0===B.hasUVIndices&&S.addAttribute("uv",new THREE.Float32BufferAttribute(B.uvs,2));for(var D=[],k=0,J=C.length;k<J;k++){var q=C[k],K=q.name+"_"+q.smooth+"_"+G,P=o.materials[K];if(null!==this.materials)if(P=this.materials.create(q.name),!O||!P||P instanceof THREE.LineBasicMaterial){if(_&&P&&!(P instanceof THREE.PointsMaterial)){var Q=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});THREE.Material.prototype.copy.call(Q,P),Q.color.copy(P.color),Q.map=P.map,P=Q}}else{var W=new THREE.LineBasicMaterial;THREE.Material.prototype.copy.call(W,P),W.color.copy(P.color),W.lights=!1,P=W}void 0===P&&(P=O?new THREE.LineBasicMaterial:_?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial,P.name=q.name,P.flatShading=!q.smooth,P.vertexColors=G,o.materials[K]=P),D.push(P)}var X;if(D.length>1){for(var k=0,J=C.length;k<J;k++){var q=C[k];S.addGroup(q.groupStart,q.groupCount,k)}X=O?new THREE.LineSegments(S,D):_?new THREE.Points(S,D):new THREE.Mesh(S,D)}else X=O?new THREE.LineSegments(S,D[0]):_?new THREE.Points(S,D[0]):new THREE.Mesh(S,D[0]);X.name=N.name,U.add(X)}}return U}}),e}();