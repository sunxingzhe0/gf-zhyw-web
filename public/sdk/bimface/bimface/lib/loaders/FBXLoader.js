"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},FBXLoader=function(){function e(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager}function t(e){this.textureLoader=e,this.imageNum=0,this.loadTextureCount=0,this.onLoad=null}function r(){}function a(){}function n(){}function i(){}function o(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=void 0===t||t}function s(){}function u(e){var t="Kaydara FBX Binary  \0";return e.byteLength>=t.length&&t===m(e,0,t.length)}function l(e){for(var t=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"],r=0,a=0;a<t.length;++a){if(function(t){var a=e[t-1];return e=e.slice(r+t),r++,a}(1)===t[a])return!1}return!0}function c(e){var t=/FBXVersion: (\d+)/,r=e.match(t);if(r){return parseInt(r[1])}throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function p(e){return e/46186158e3}function f(e,t,r,a){var n;switch(a.mappingType){case"ByPolygonVertex":n=e;break;case"ByPolygon":n=t;break;case"ByVertice":n=r;break;case"AllSame":n=a.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+a.mappingType)}"IndexToDirect"===a.referenceType&&(n=a.indices[n]);var i=n*a.dataSize,o=i+a.dataSize;return E(I,a.buffer,i,o)}function h(e){var t=new THREE.Matrix4,r=new THREE.Matrix4,a=new THREE.Matrix4,n=new THREE.Matrix4,i=new THREE.Matrix4,o=new THREE.Matrix4,s=new THREE.Matrix4,u=new THREE.Matrix4,l=new THREE.Matrix4,c=new THREE.Matrix4,p=new THREE.Matrix4,f=e.inheritType?e.inheritType:0;if(e.translation&&t.setPosition(b.fromArray(e.translation)),e.preRotation){var h=e.preRotation.map(THREE.Math.degToRad);h.push(e.eulerOrder),r.makeRotationFromEuler(x.fromArray(h))}if(e.rotation){var h=e.rotation.map(THREE.Math.degToRad);h.push(e.eulerOrder),a.makeRotationFromEuler(x.fromArray(h))}if(e.postRotation){var h=e.postRotation.map(THREE.Math.degToRad);h.push(e.eulerOrder),n.makeRotationFromEuler(x.fromArray(h))}e.scale&&i.scale(b.fromArray(e.scale)),e.scalingOffset&&s.setPosition(b.fromArray(e.scalingOffset)),e.scalingPivot&&o.setPosition(b.fromArray(e.scalingPivot)),e.rotationOffset&&u.setPosition(b.fromArray(e.rotationOffset)),e.rotationPivot&&l.setPosition(b.fromArray(e.rotationPivot)),e.parentMatrixWorld&&(c=e.parentMatrixWorld);var d=r.multiply(a).multiply(n),v=new THREE.Matrix4;c.extractRotation(v),c.elements[3]=0,c.elements[7]=0,c.elements[11]=0,c.elements[12]=0,c.elements[13]=0,c.elements[14]=0,c.elements[15]=1;var m,g,E,y=new THREE.Matrix4;y.copyPosition(c),E=y.getInverse(y).multiply(c),g=v.getInverse(v).multiply(E),m=i;var T;if(0===f)T=v.multiply(d).multiply(g).multiply(m);else if(1===f)T=v.multiply(g).multiply(d).multiply(m);else{var w=(new THREE.Matrix4).copy(i),R=g.multiply(w.getInverse(w));T=v.multiply(d).multiply(R).multiply(m)}var I=t.multiply(u).multiply(l).multiply(r).multiply(a).multiply(n).multiply(l.getInverse(l)).multiply(s).multiply(o).multiply(i).multiply(o.getInverse(o)),A=(new THREE.Matrix4).copyPosition(I),L=c.multiply(A);return p.copyPosition(L),I=p.multiply(T)}function d(e){e=e||0;var t=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return 6===e?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),t[0]):t[e]}function v(e){return e.split(",").map(function(e){return parseFloat(e)})}function m(e,t,r){return void 0===t&&(t=0),void 0===r&&(r=e.byteLength),(new TextDecoder).decode(new Uint8Array(e,t,r))}function g(e,t){for(var r=0,a=e.length,n=t.length;r<n;r++,a++)e[a]=t[r]}function E(e,t,r,a){for(var n=r,i=0;n<a;n++,i++)e[i]=t[n];return e}function y(e,t,r){return e.slice(0,t).concat(r).concat(e.slice(t))}var T,w,R;e.prototype={constructor:e,crossOrigin:"anonymous",load:function(e,t,r,a){var n=this,i=void 0===n.path?THREE.Loader.prototype.extractUrlBase(e):n.path,o=new THREE.FileLoader(this.manager);o.setPath(n.path),o.setResponseType("arraybuffer"),o.load(e,function(r){try{n.parse(r,i,t)}catch(t){console.warn(t.message),setTimeout(function(){a&&a(t),n.manager.itemError(e)},0)}},r,a)},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setCrossOrigin:function(e){return this.crossOrigin=e,this},parse:function(e,r,a){if(u(e))T=(new i).parse(e);else{var o=m(e);if(!l(o))throw new Error("THREE.FBXLoader: Unknown format.");if(c(o)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+c(o));T=(new n).parse(o)}return new t(new THREE.TextureLoader(this.manager).setPath(this.resourcePath||r).setCrossOrigin(this.crossOrigin)).parse(T,a)}},t.prototype={constructor:t,parse:function(e,t){w=this.parseConnections(),this.onLoad=t;var r=this.parseImages();0==this.imageNum?this.onLoadTexture():this.parseTextures(r)},onLoadTexture:function(){if(++this.loadTextureCount>=this.imageNum){var e=this.parseMaterials(this.textures),t=this.parseDeformers(),a=(new r).parse(t);this.parseScene(t,a,e),this.onLoad&&this.onLoad(R)}},parseConnections:function(){var e=new Map;if("Connections"in T){T.Connections.connections.forEach(function(t){var r=t[0],a=t[1],n=t[2];e.has(r)||e.set(r,{parents:[],children:[]});var i={ID:a,relationship:n};e.get(r).parents.push(i),e.has(a)||e.set(a,{parents:[],children:[]});var o={ID:r,relationship:n};e.get(a).children.push(o)})}return e},parseImages:function(){var e={},t={};if(this.imageNum=0,"Video"in T.Objects){var r=T.Objects.Video;for(var a in r){var n=r[a],i=parseInt(a);if(e[i]=n.RelativeFilename||n.Filename,this.imageNum++,"Content"in n){var o=n.Content instanceof ArrayBuffer&&n.Content.byteLength>0,s="string"==typeof n.Content&&""!==n.Content;if(o||s){var u=this.parseImage(r[a]);t[n.RelativeFilename||n.Filename]=u}}}}for(var i in e){var l=e[i];void 0!==t[l]?e[i]=t[l]:e[i]=e[i].split("\\").pop()}return e},parseImage:function(e){var t,r=e.Content,a=e.RelativeFilename||e.Filename,n=a.slice(a.lastIndexOf(".")+1).toLowerCase();switch(n){case"bmp":t="image/bmp";break;case"jpg":case"jpeg":t="image/jpeg";break;case"png":t="image/png";break;case"tif":t="image/tiff";break;case"tga":if("function"!=typeof THREE.TGALoader)return void console.warn("FBXLoader: THREE.TGALoader is required to load TGA textures");if(null===THREE.Loader.Handlers.get(".tga")){var i=new THREE.TGALoader;i.setPath(this.textureLoader.path),THREE.Loader.Handlers.add(/\.tga$/i,i)}t="image/tga";break;default:return void console.warn('FBXLoader: Image type "'+n+'" is not supported.')}if("string"==typeof r)return"data:"+t+";base64,"+r;var o=new Uint8Array(r);return window.URL.createObjectURL(new Blob([o],{type:t}))},parseTextures:function(e){if(this.textures=new Map,"Texture"in T.Objects){var t=T.Objects.Texture;for(var r in t){var a=this.parseTexture(t[r],e);this.textures.set(parseInt(r),a)}}return this.textures},parseTexture:function(e,t){var r=this.loadTexture(e,t);r.ID=e.id,r.name=e.attrName;var a=e.WrapModeU,n=e.WrapModeV,i=void 0!==a?a.value:0,o=void 0!==n?n.value:0;if(r.wrapS=0===i?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,r.wrapT=0===o?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,"Scaling"in e){var s=e.Scaling.value;r.repeat.x=s[0],r.repeat.y=s[1]}return r},loadTexture:function(e,t){var r,a=this.textureLoader.path,n=this,i=w.get(e.id).children;void 0!==i&&i.length>0&&void 0!==t[i[0].ID]&&(r=t[i[0].ID],0!==r.indexOf("blob:")&&0!==r.indexOf("data:")||this.textureLoader.setPath(void 0));var o,s=e.FileName.slice(-3).toLowerCase();if("tga"===s){var u=THREE.Loader.Handlers.get(".tga");null===u?(console.warn("FBXLoader: TGALoader not found, creating empty placeholder texture for",r),o=null,n.onLoadTexture()):o=u.load(r,function(){n.onLoadTexture()},void 0,function(){n.textures.set(e.id,null),n.onLoadTexture()})}else"psd"===s?(console.warn("FBXLoader: PSD textures are not supported, creating empty placeholder texture for",r),o=null,n.onLoadTexture()):o=this.textureLoader.load(r,function(){n.onLoadTexture()},void 0,function(){n.textures.set(e.id,null),n.onLoadTexture()});return this.textureLoader.setPath(a),o},parseMaterials:function(e){var t=new Map;if("Material"in T.Objects){var r=T.Objects.Material;for(var a in r){var n=this.parseMaterial(r[a],e);null!==n&&t.set(parseInt(a),n)}}return t},parseMaterial:function(e,t){var r=e.id,a=e.attrName,n=e.ShadingModel;if("object"===(void 0===n?"undefined":_typeof(n))&&(n=n.value),!w.has(r))return null;var i,o=this.parseParameters(e,t,r);switch(n.toLowerCase()){case"phong":i=new THREE.MeshPhongMaterial;break;case"lambert":i=new THREE.MeshLambertMaterial;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',n),i=new THREE.MeshPhongMaterial}return i.setValues(o),i.name=a,i},parseParameters:function(e,t,r){var a={};e.BumpFactor&&(a.bumpScale=e.BumpFactor.value),e.Diffuse?a.color=(new THREE.Color).fromArray(e.Diffuse.value):e.DiffuseColor&&"Color"===e.DiffuseColor.type&&(a.color=(new THREE.Color).fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(a.displacementScale=e.DisplacementFactor.value),e.Emissive?a.emissive=(new THREE.Color).fromArray(e.Emissive.value):e.EmissiveColor&&"Color"===e.EmissiveColor.type&&(a.emissive=(new THREE.Color).fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(a.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(a.opacity=parseFloat(e.Opacity.value)),a.opacity<1&&(a.transparent=!0),e.ReflectionFactor&&(a.reflectivity=e.ReflectionFactor.value),e.Shininess&&(a.shininess=e.Shininess.value),e.Specular?a.specular=(new THREE.Color).fromArray(e.Specular.value):e.SpecularColor&&"Color"===e.SpecularColor.type&&(a.specular=(new THREE.Color).fromArray(e.SpecularColor.value));var n=this;return w.get(r).children.forEach(function(e){var r=e.relationship;switch(r){case"Bump":a.bumpMap=n.getTexture(t,e.ID);break;case"Maya|TEX_ao_map":a.aoMap=n.getTexture(t,e.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":a.map=n.getTexture(t,e.ID);break;case"DisplacementColor":a.displacementMap=n.getTexture(t,e.ID);break;case"EmissiveColor":a.emissiveMap=n.getTexture(t,e.ID);break;case"NormalMap":case"Maya|TEX_normal_map":a.normalMap=n.getTexture(t,e.ID);break;case"ReflectionColor":a.envMap=n.getTexture(t,e.ID),a.envMap.mapping=THREE.EquirectangularReflectionMapping;break;case"SpecularColor":a.specularMap=n.getTexture(t,e.ID);break;case"TransparentColor":a.alphaMap=n.getTexture(t,e.ID),a.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",r)}}),a},getTexture:function(e,t){return"LayeredTexture"in T.Objects&&t in T.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=w.get(t).children[0].ID),e.get(t)},parseDeformers:function(){var e={},t={};if("Deformer"in T.Objects){var r=T.Objects.Deformer;for(var a in r){var n=r[a],i=w.get(parseInt(a));if("Skin"===n.attrType){var o=this.parseSkeleton(i,r);o.ID=a,i.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),o.geometryID=i.parents[0].ID,e[a]=o}else if("BlendShape"===n.attrType){var s={id:a};s.rawTargets=this.parseMorphTargets(i,r),s.id=a,i.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[a]=s}}}return{skeletons:e,morphTargets:t}},parseSkeleton:function(e,t){var r=[];return e.children.forEach(function(e){var a=t[e.ID];if("Cluster"===a.attrType){var n={ID:e.ID,indices:[],weights:[],transformLink:(new THREE.Matrix4).fromArray(a.TransformLink.a)};"Indexes"in a&&(n.indices=a.Indexes.a,n.weights=a.Weights.a),r.push(n)}}),{rawBones:r,bones:[]}},parseMorphTargets:function(e,t){for(var r=[],a=0;a<e.children.length;a++){var n=e.children[a],i=t[n.ID],o={name:i.attrName,initialWeight:i.DeformPercent,id:i.id,fullWeights:i.FullWeights.a};if("BlendShapeChannel"!==i.attrType)return;o.geoID=w.get(parseInt(n.ID)).children.filter(function(e){return void 0===e.relationship})[0].ID,r.push(o)}return r},parseScene:function(e,t,r){R=new THREE.Group;var n=this.parseModels(e.skeletons,t,r),i=T.Objects.Model,o=this;n.forEach(function(e){var t=i[e.ID];o.setLookAtProperties(e,t),w.get(e.ID).parents.forEach(function(t){var r=n.get(t.ID);void 0!==r&&r.add(e)}),null===e.parent&&R.add(e)}),this.bindSkeleton(e.skeletons,t,n),this.createAmbientLight(),this.setupMorphMaterials(),R.traverse(function(e){if(e.userData.transformData){e.parent&&(e.userData.transformData.parentMatrixWorld=e.parent.matrix);var t=h(e.userData.transformData);e.applyMatrix(t)}});var s=(new a).parse();1===R.children.length&&R.children[0].isGroup&&(R.children[0].animations=s,R=R.children[0]),R.animations=s},parseModels:function(e,t,r){var a=new Map,n=T.Objects.Model,i=this;for(var o in n){var s=parseInt(o),u=n[o],l=w.get(s),c=this.buildSkeleton(l,e,s,u.attrName);if(!c){switch(u.attrType){case"Camera":c=this.createCamera(l);break;case"Light":c=this.createLight(l);break;case"Mesh":c=this.createMesh(l,t,r);break;case"NurbsCurve":c=this.createCurve(l,t);break;case"LimbNode":case"Root":c=new THREE.Bone;break;case"Null":default:c=new THREE.Group}c.name=i.sanitizeNodeName(u.attrName),c.ID=s}this.getTransformData(c,u),a.set(s,c)}return a},sanitizeNodeName:function(){var e=new RegExp("[\\[\\]\\.:\\/]","g");return function(t){return t.replace(/\s/g,"_").replace(e,"")}}(),buildSkeleton:function(e,t,r,a){var n=null,i=this;return e.parents.forEach(function(e){for(var o in t){var s=t[o];s.rawBones.forEach(function(t,o){if(t.ID===e.ID){var u=n;n=new THREE.Bone,n.matrixWorld.copy(t.transformLink),n.name=i.sanitizeNodeName(a),n.ID=r,s.bones[o]=n,null!==u&&n.add(u)}})}}),n},createCamera:function(e){var t,r;if(e.children.forEach(function(e){var t=T.Objects.NodeAttribute[e.ID];void 0!==t&&(r=t)}),void 0===r)t=new THREE.Object3D;else{var a=0;void 0!==r.CameraProjectionType&&1===r.CameraProjectionType.value&&(a=1);var n=1;void 0!==r.NearPlane&&(n=r.NearPlane.value/1e3);var i=1e3;void 0!==r.FarPlane&&(i=r.FarPlane.value/1e3);var o=window.innerWidth,s=window.innerHeight;void 0!==r.AspectWidth&&void 0!==r.AspectHeight&&(o=r.AspectWidth.value,s=r.AspectHeight.value);var u=o/s,l=45;void 0!==r.FieldOfView&&(l=r.FieldOfView.value);var c=r.FocalLength?r.FocalLength.value:null;switch(a){case 0:t=new THREE.PerspectiveCamera(l,u,n,i),null!==c&&t.setFocalLength(c);break;case 1:t=new THREE.OrthographicCamera(-o/2,o/2,s/2,-s/2,n,i);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+a+"."),t=new THREE.Object3D}}return t},createLight:function(e){var t,r;if(e.children.forEach(function(e){var t=T.Objects.NodeAttribute[e.ID];void 0!==t&&(r=t)}),void 0===r)t=new THREE.Object3D;else{var a;a=void 0===r.LightType?0:r.LightType.value;var n=16777215;void 0!==r.Color&&(n=(new THREE.Color).fromArray(r.Color.value));var i=void 0===r.Intensity?1:r.Intensity.value/100;void 0!==r.CastLightOnObject&&0===r.CastLightOnObject.value&&(i=0);var o=0;void 0!==r.FarAttenuationEnd&&(o=void 0!==r.EnableFarAttenuation&&0===r.EnableFarAttenuation.value?0:r.FarAttenuationEnd.value);switch(a){case 0:t=new THREE.PointLight(n,i,o,1);break;case 1:t=new THREE.DirectionalLight(n,i);break;case 2:var s=Math.PI/3;void 0!==r.InnerAngle&&(s=THREE.Math.degToRad(r.InnerAngle.value));var u=0;void 0!==r.OuterAngle&&(u=THREE.Math.degToRad(r.OuterAngle.value),u=Math.max(u,1)),t=new THREE.SpotLight(n,i,o,s,u,1);break;default:console.warn("THREE.FBXLoader: Unknown light type "+r.LightType.value+", defaulting to a THREE.PointLight."),t=new THREE.PointLight(n,i)}void 0!==r.CastShadows&&1===r.CastShadows.value&&(t.castShadow=!0)}return t},createMesh:function(e,t,r){var a,n=null,i=null,o=[];return e.children.forEach(function(e){t.has(e.ID)&&(n=t.get(e.ID)),r.has(e.ID)&&o.push(r.get(e.ID))}),o.length>1?i=o:o.length>0?i=o[0]:(i=new THREE.MeshPhongMaterial({color:13421772}),o.push(i)),"color"in n.attributes&&o.forEach(function(e){e.vertexColors=THREE.VertexColors}),n.FBX_Deformer?(o.forEach(function(e){e.skinning=!0}),a=new THREE.SkinnedMesh(n,i),a.normalizeSkinWeights()):a=new THREE.Mesh(n,i),a},createCurve:function(e,t){var r=e.children.reduce(function(e,r){return t.has(r.ID)&&(e=t.get(r.ID)),e},null),a=new THREE.LineBasicMaterial({color:3342591,linewidth:1});return new THREE.Line(r,a)},getTransformData:function(e,t){var r={};"InheritType"in t&&(r.inheritType=parseInt(t.InheritType.value)),r.eulerOrder="RotationOrder"in t?d(t.RotationOrder.value):"ZYX","Lcl_Translation"in t&&(r.translation=t.Lcl_Translation.value),"PreRotation"in t&&(r.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(r.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(r.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(r.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(r.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(r.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(r.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(r.rotationPivot=t.RotationPivot.value),e.userData.transformData=r},setLookAtProperties:function(e,t){if("LookAtProperty"in t){w.get(e.ID).children.forEach(function(t){if("LookAtProperty"===t.relationship){var r=T.Objects.Model[t.ID];if("Lcl_Translation"in r){var a=r.Lcl_Translation.value;void 0!==e.target?(e.target.position.fromArray(a),R.add(e.target)):e.lookAt((new THREE.Vector3).fromArray(a))}}})}},bindSkeleton:function(e,t,r){var a=this.parsePoseNodes();for(var n in e){var i=e[n];w.get(parseInt(i.ID)).parents.forEach(function(e){if(t.has(e.ID)){var n=e.ID;w.get(n).parents.forEach(function(e){if(r.has(e.ID)){r.get(e.ID).bind(new THREE.Skeleton(i.bones),a[e.ID])}})}})}},parsePoseNodes:function(){var e={};if("Pose"in T.Objects){var t=T.Objects.Pose;for(var r in t)if("BindPose"===t[r].attrType){var a=t[r].PoseNode;Array.isArray(a)?a.forEach(function(t){e[t.Node]=(new THREE.Matrix4).fromArray(t.Matrix.a)}):e[a.Node]=(new THREE.Matrix4).fromArray(a.Matrix.a)}}return e},createAmbientLight:function(){if("GlobalSettings"in T&&"AmbientColor"in T.GlobalSettings){var e=T.GlobalSettings.AmbientColor.value,t=e[0],r=e[1],a=e[2];if(0!==t||0!==r||0!==a){var n=new THREE.Color(t,r,a);R.add(new THREE.AmbientLight(n,1))}}},setupMorphMaterials:function(){var e=this;R.traverse(function(t){t.isMesh&&t.geometry.morphAttributes.position&&t.geometry.morphAttributes.position.length&&(Array.isArray(t.material)?t.material.forEach(function(r,a){e.setupMorphMaterial(t,r,a)}):e.setupMorphMaterial(t,t.material))})},setupMorphMaterial:function(e,t,r){var a=e.uuid,n=t.uuid,i=!1;if(R.traverse(function(e){e.isMesh&&(Array.isArray(e.material)?e.material.forEach(function(t){t.uuid===n&&e.uuid!==a&&(i=!0)}):e.material.uuid===n&&e.uuid!==a&&(i=!0))}),!0===i){var o=t.clone();o.morphTargets=!0,void 0===r?e.material=o:e.material[r]=o}else t.morphTargets=!0}},r.prototype={constructor:r,parse:function(e){var t=new Map;if("Geometry"in T.Objects){var r=T.Objects.Geometry;for(var a in r){var n=w.get(parseInt(a)),i=this.parseGeometry(n,r[a],e);t.set(parseInt(a),i)}}return t},parseGeometry:function(e,t,r){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,r);case"NurbsCurve":return this.parseNurbsGeometry(t)}},parseMeshGeometry:function(e,t,r){var a=r.skeletons,n=r.morphTargets,i=e.parents.map(function(e){return T.Objects.Model[e.ID]});if(0!==i.length){var o=e.children.reduce(function(e,t){return void 0!==a[t.ID]&&(e=a[t.ID]),e},null),s=e.children.reduce(function(e,t){return void 0!==n[t.ID]&&(e=n[t.ID]),e},null),u=i[0],l={};"RotationOrder"in u&&(l.eulerOrder=d(u.RotationOrder.value)),"InheritType"in u&&(l.inheritType=parseInt(u.InheritType.value)),"GeometricTranslation"in u&&(l.translation=u.GeometricTranslation.value),"GeometricRotation"in u&&(l.rotation=u.GeometricRotation.value),"GeometricScaling"in u&&(l.scale=u.GeometricScaling.value);var c=h(l);return this.genGeometry(t,o,s,c)}},genGeometry:function(e,t,r,a){var n=new THREE.BufferGeometry;e.attrName&&(n.name=e.attrName);var i=this.parseGeoNode(e,t),o=this.genBuffers(i),s=new THREE.Float32BufferAttribute(o.vertex,3);if(a.applyToBufferAttribute(s),n.addAttribute("position",s),o.colors.length>0&&n.addAttribute("color",new THREE.Float32BufferAttribute(o.colors,3)),t&&(n.addAttribute("skinIndex",new THREE.Uint16BufferAttribute(o.weightsIndices,4)),n.addAttribute("skinWeight",new THREE.Float32BufferAttribute(o.vertexWeights,4)),n.FBX_Deformer=t),o.normal.length>0){var u=new THREE.Float32BufferAttribute(o.normal,3);(new THREE.Matrix3).getNormalMatrix(a).applyToBufferAttribute(u),n.addAttribute("normal",u)}if(o.uvs.forEach(function(e,t){var r="uv"+(t+1).toString();0===t&&(r="uv"),n.addAttribute(r,new THREE.Float32BufferAttribute(o.uvs[t],2))}),i.material&&"AllSame"!==i.material.mappingType){var l=o.materialIndex[0],c=0;if(o.materialIndex.forEach(function(e,t){e!==l&&(n.addGroup(c,t-c,l),l=e,c=t)}),n.groups.length>0){var p=n.groups[n.groups.length-1],f=p.start+p.count;f!==o.materialIndex.length&&n.addGroup(f,o.materialIndex.length-f,l)}0===n.groups.length&&n.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(n,e,r,a),n},parseGeoNode:function(e,t){var r={};if(r.vertexPositions=void 0!==e.Vertices?e.Vertices.a:[],r.vertexIndices=void 0!==e.PolygonVertexIndex?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(r.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(r.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(r.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){r.uv=[];for(var a=0;e.LayerElementUV[a];)r.uv.push(this.parseUVs(e.LayerElementUV[a])),a++}return r.weightTable={},null!==t&&(r.skeleton=t,t.rawBones.forEach(function(e,t){e.indices.forEach(function(a,n){void 0===r.weightTable[a]&&(r.weightTable[a]=[]),r.weightTable[a].push({id:t,weight:e.weights[n]})})})),r},genBuffers:function(e){var t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]},r=0,a=0,n=!1,i=[],o=[],s=[],u=[],l=[],c=[],p=this;return e.vertexIndices.forEach(function(h,d){var v=!1;h<0&&(h^=-1,v=!0);var m=[],g=[];if(i.push(3*h,3*h+1,3*h+2),e.color){var E=f(d,r,h,e.color);s.push(E[0],E[1],E[2])}if(e.skeleton){if(void 0!==e.weightTable[h]&&e.weightTable[h].forEach(function(e){g.push(e.weight),m.push(e.id)}),g.length>4){n||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),n=!0);var y=[0,0,0,0],T=[0,0,0,0];g.forEach(function(e,t){var r=e,a=m[t];T.forEach(function(e,t,n){if(r>e){n[t]=r,r=e;var i=y[t];y[t]=a,a=i}})}),m=y,g=T}for(;g.length<4;)g.push(0),m.push(0);for(var w=0;w<4;++w)l.push(g[w]),c.push(m[w])}if(e.normal){var E=f(d,r,h,e.normal);o.push(E[0],E[1],E[2])}if(e.material&&"AllSame"!==e.material.mappingType)var R=f(d,r,h,e.material)[0];e.uv&&e.uv.forEach(function(e,t){var a=f(d,r,h,e);void 0===u[t]&&(u[t]=[]),u[t].push(a[0]),u[t].push(a[1])}),a++,v&&(p.genFace(t,e,i,R,o,s,u,l,c,a),r++,a=0,i=[],o=[],s=[],u=[],l=[],c=[])}),t},genFace:function(e,t,r,a,n,i,o,s,u,l){for(var c=2;c<l;c++)e.vertex.push(t.vertexPositions[r[0]]),e.vertex.push(t.vertexPositions[r[1]]),e.vertex.push(t.vertexPositions[r[2]]),e.vertex.push(t.vertexPositions[r[3*(c-1)]]),e.vertex.push(t.vertexPositions[r[3*(c-1)+1]]),e.vertex.push(t.vertexPositions[r[3*(c-1)+2]]),e.vertex.push(t.vertexPositions[r[3*c]]),e.vertex.push(t.vertexPositions[r[3*c+1]]),e.vertex.push(t.vertexPositions[r[3*c+2]]),t.skeleton&&(e.vertexWeights.push(s[0]),e.vertexWeights.push(s[1]),e.vertexWeights.push(s[2]),e.vertexWeights.push(s[3]),e.vertexWeights.push(s[4*(c-1)]),e.vertexWeights.push(s[4*(c-1)+1]),e.vertexWeights.push(s[4*(c-1)+2]),e.vertexWeights.push(s[4*(c-1)+3]),e.vertexWeights.push(s[4*c]),e.vertexWeights.push(s[4*c+1]),e.vertexWeights.push(s[4*c+2]),e.vertexWeights.push(s[4*c+3]),e.weightsIndices.push(u[0]),e.weightsIndices.push(u[1]),e.weightsIndices.push(u[2]),e.weightsIndices.push(u[3]),e.weightsIndices.push(u[4*(c-1)]),e.weightsIndices.push(u[4*(c-1)+1]),e.weightsIndices.push(u[4*(c-1)+2]),e.weightsIndices.push(u[4*(c-1)+3]),e.weightsIndices.push(u[4*c]),e.weightsIndices.push(u[4*c+1]),e.weightsIndices.push(u[4*c+2]),e.weightsIndices.push(u[4*c+3])),t.color&&(e.colors.push(i[0]),e.colors.push(i[1]),e.colors.push(i[2]),e.colors.push(i[3*(c-1)]),e.colors.push(i[3*(c-1)+1]),e.colors.push(i[3*(c-1)+2]),e.colors.push(i[3*c]),e.colors.push(i[3*c+1]),e.colors.push(i[3*c+2])),t.material&&"AllSame"!==t.material.mappingType&&(e.materialIndex.push(a),e.materialIndex.push(a),e.materialIndex.push(a)),t.normal&&(e.normal.push(n[0]),e.normal.push(n[1]),e.normal.push(n[2]),e.normal.push(n[3*(c-1)]),e.normal.push(n[3*(c-1)+1]),e.normal.push(n[3*(c-1)+2]),e.normal.push(n[3*c]),e.normal.push(n[3*c+1]),e.normal.push(n[3*c+2])),t.uv&&t.uv.forEach(function(t,r){void 0===e.uvs[r]&&(e.uvs[r]=[]),e.uvs[r].push(o[r][0]),e.uvs[r].push(o[r][1]),e.uvs[r].push(o[r][2*(c-1)]),e.uvs[r].push(o[r][2*(c-1)+1]),e.uvs[r].push(o[r][2*c]),e.uvs[r].push(o[r][2*c+1])})},addMorphTargets:function(e,t,r,a){if(null!==r){e.morphAttributes.position=[];var n=this;r.rawTargets.forEach(function(r){var i=T.Objects.Geometry[r.geoID];void 0!==i&&n.genMorphGeometry(e,t,i,a,r.name)})}},genMorphGeometry:function(e,t,r,a,n){var i=new THREE.BufferGeometry;r.attrName&&(i.name=r.attrName);for(var o=void 0!==t.PolygonVertexIndex?t.PolygonVertexIndex.a:[],s=void 0!==t.Vertices?t.Vertices.a.slice():[],u=void 0!==r.Vertices?r.Vertices.a:[],l=void 0!==r.Indexes?r.Indexes.a:[],c=0;c<l.length;c++){var p=3*l[c];s[p]+=u[3*c],s[p+1]+=u[3*c+1],s[p+2]+=u[3*c+2]}var f={vertexIndices:o,vertexPositions:s},h=this.genBuffers(f),d=new THREE.Float32BufferAttribute(h.vertex,3);d.name=n||r.attrName,a.applyToBufferAttribute(d),e.morphAttributes.position.push(d)},parseNormals:function(e){var t=e.MappingInformationType,r=e.ReferenceInformationType,a=e.Normals.a,n=[];return"IndexToDirect"===r&&("NormalIndex"in e?n=e.NormalIndex.a:"NormalsIndex"in e&&(n=e.NormalsIndex.a)),{dataSize:3,buffer:a,indices:n,mappingType:t,referenceType:r}},parseUVs:function(e){var t=e.MappingInformationType,r=e.ReferenceInformationType,a=e.UV.a,n=[];return"IndexToDirect"===r&&(n=e.UVIndex.a),{dataSize:2,buffer:a,indices:n,mappingType:t,referenceType:r}},parseVertexColors:function(e){var t=e.MappingInformationType,r=e.ReferenceInformationType,a=e.Colors.a,n=[];return"IndexToDirect"===r&&(n=e.ColorIndex.a),{dataSize:4,buffer:a,indices:n,mappingType:t,referenceType:r}},parseMaterialIndices:function(e){var t=e.MappingInformationType,r=e.ReferenceInformationType;if("NoMappingInformation"===t)return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:r};for(var a=e.Materials.a,n=[],i=0;i<a.length;++i)n.push(i);return{dataSize:1,buffer:a,indices:n,mappingType:t,referenceType:r}},parseNurbsGeometry:function(e){if(void 0===THREE.NURBSCurve)return console.error("THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new THREE.BufferGeometry;var t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new THREE.BufferGeometry;for(var r=t-1,a=e.KnotVector.a,n=[],i=e.Points.a,o=0,s=i.length;o<s;o+=4)n.push((new THREE.Vector4).fromArray(i,o));var u,l;if("Closed"===e.Form)n.push(n[0]);else if("Periodic"===e.Form){u=r,l=a.length-1-u;for(var o=0;o<r;++o)n.push(n[o])}var c=new THREE.NURBSCurve(r,a,n,u,l),p=c.getPoints(7*n.length),f=new Float32Array(3*p.length);p.forEach(function(e,t){e.toArray(f,3*t)});var h=new THREE.BufferGeometry;return h.addAttribute("position",new THREE.BufferAttribute(f,3)),h}},a.prototype={constructor:a,parse:function(){var e=[],t=this.parseClips();if(void 0!==t)for(var r in t){var a=t[r],n=this.addClip(a);e.push(n)}return e},sanitizeNodeName:function(){var e=new RegExp("[\\[\\]\\.:\\/]","g");return function(t){return t.replace(/\s/g,"_").replace(e,"")}}(),parseClips:function(){if(void 0!==T.Objects.AnimationCurve){var e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);var t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}},parseAnimationCurveNodes:function(){var e=T.Objects.AnimationCurveNode,t=new Map;for(var r in e){var a=e[r];if(null!==a.attrName.match(/S|R|T|DeformPercent/)){var n={id:a.id,attr:a.attrName,curves:{}};t.set(n.id,n)}}return t},parseAnimationCurves:function(e){var t=T.Objects.AnimationCurve;for(var r in t){var a={id:t[r].id,times:t[r].KeyTime.a.map(p),values:t[r].KeyValueFloat.a},n=w.get(a.id);if(void 0!==n){var i=n.parents[0].ID,o=n.parents[0].relationship;o.match(/X/)?e.get(i).curves.x=a:o.match(/Y/)?e.get(i).curves.y=a:o.match(/Z/)?e.get(i).curves.z=a:o.match(/d|DeformPercent/)&&e.has(i)&&(e.get(i).curves.morph=a)}}},parseAnimationLayers:function(e){var t=T.Objects.AnimationLayer,r=this,a=new Map;for(var n in t){var i=[],o=w.get(parseInt(n));if(void 0!==o){o.children.forEach(function(t,a){if(e.has(t.ID)){var n=e.get(t.ID);if(void 0!==n.curves.x||void 0!==n.curves.y||void 0!==n.curves.z){if(void 0===i[a]){var o=w.get(t.ID).parents.filter(function(e){return void 0!==e.relationship})[0].ID;if(void 0!==o){var s=T.Objects.Model[o.toString()],u={modelName:r.sanitizeNodeName(s.attrName),ID:s.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};R.traverse(function(e){e.ID===s.id&&(u.transform=e.matrix,e.userData.transformData&&(u.eulerOrder=e.userData.transformData.eulerOrder))}),u.transform||(u.transform=new THREE.Matrix4),"PreRotation"in s&&(u.preRotation=s.PreRotation.value),"PostRotation"in s&&(u.postRotation=s.PostRotation.value),i[a]=u}}i[a]&&(i[a][n.attr]=n)}else if(void 0!==n.curves.morph){if(void 0===i[a]){var l=w.get(t.ID).parents.filter(function(e){return void 0!==e.relationship})[0].ID,c=w.get(l).parents[0].ID,p=w.get(c).parents[0].ID,o=w.get(p).parents[0].ID,s=T.Objects.Model[o],u={modelName:r.sanitizeNodeName(s.attrName),morphName:T.Objects.Deformer[l].attrName};i[a]=u}i[a][n.attr]=n}}}),a.set(parseInt(n),i)}}return a},parseAnimStacks:function(e){var t=T.Objects.AnimationStack,r={};for(var a in t){var n=w.get(parseInt(a)).children;n.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");var i=e.get(n[0].ID);r[a]={name:t[a].attrName,layer:i}}return r},addClip:function(e){var t=[],r=this;return e.layer.forEach(function(e){t=t.concat(r.generateTracks(e))}),new THREE.AnimationClip(e.name,-1,t)},generateTracks:function(e){var t=[],r=new THREE.Vector3,a=new THREE.Quaternion,n=new THREE.Vector3;if(e.transform&&e.transform.decompose(r,a,n),r=r.toArray(),a=(new THREE.Euler).setFromQuaternion(a,e.eulerOrder).toArray(),n=n.toArray(),void 0!==e.T&&Object.keys(e.T.curves).length>0){var i=this.generateVectorTrack(e.modelName,e.T.curves,r,"position");void 0!==i&&t.push(i)}if(void 0!==e.R&&Object.keys(e.R.curves).length>0){var o=this.generateRotationTrack(e.modelName,e.R.curves,a,e.preRotation,e.postRotation,e.eulerOrder);void 0!==o&&t.push(o)}if(void 0!==e.S&&Object.keys(e.S.curves).length>0){var s=this.generateVectorTrack(e.modelName,e.S.curves,n,"scale");void 0!==s&&t.push(s)}if(void 0!==e.DeformPercent){var u=this.generateMorphTrack(e);void 0!==u&&t.push(u)}return t},generateVectorTrack:function(e,t,r,a){var n=this.getTimesForAllAxes(t),i=this.getKeyframeTrackValues(n,t,r);return new THREE.VectorKeyframeTrack(e+"."+a,n,i)},generateRotationTrack:function(e,t,r,a,n,i){void 0!==t.x&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(THREE.Math.degToRad)),void 0!==t.y&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(THREE.Math.degToRad)),void 0!==t.z&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(THREE.Math.degToRad))
;var o=this.getTimesForAllAxes(t),s=this.getKeyframeTrackValues(o,t,r);void 0!==a&&(a=a.map(THREE.Math.degToRad),a.push(i),a=(new THREE.Euler).fromArray(a),a=(new THREE.Quaternion).setFromEuler(a)),void 0!==n&&(n=n.map(THREE.Math.degToRad),n.push(i),n=(new THREE.Euler).fromArray(n),n=(new THREE.Quaternion).setFromEuler(n).inverse());for(var u=new THREE.Quaternion,l=new THREE.Euler,c=[],p=0;p<s.length;p+=3)l.set(s[p],s[p+1],s[p+2],i),u.setFromEuler(l),void 0!==a&&u.premultiply(a),void 0!==n&&u.multiply(n),u.toArray(c,p/3*4);return new THREE.QuaternionKeyframeTrack(e+".quaternion",o,c)},generateMorphTrack:function(e){var t=e.DeformPercent.curves.morph,r=t.values.map(function(e){return e/100}),a=R.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new THREE.NumberKeyframeTrack(e.modelName+".morphTargetInfluences["+a+"]",t.times,r)},getTimesForAllAxes:function(e){var t=[];return void 0!==e.x&&(t=t.concat(e.x.times)),void 0!==e.y&&(t=t.concat(e.y.times)),void 0!==e.z&&(t=t.concat(e.z.times)),t=t.sort(function(e,t){return e-t}).filter(function(e,t,r){return r.indexOf(e)==t})},getKeyframeTrackValues:function(e,t,r){var a=r,n=[],i=-1,o=-1,s=-1;return e.forEach(function(e){if(t.x&&(i=t.x.times.indexOf(e)),t.y&&(o=t.y.times.indexOf(e)),t.z&&(s=t.z.times.indexOf(e)),-1!==i){var r=t.x.values[i];n.push(r),a[0]=r}else n.push(a[0]);if(-1!==o){var u=t.y.values[o];n.push(u),a[1]=u}else n.push(a[1]);if(-1!==s){var l=t.z.values[s];n.push(l),a[2]=l}else n.push(a[2])}),n},interpolateRotations:function(e){for(var t=1;t<e.values.length;t++){var r=e.values[t-1],a=e.values[t]-r,n=Math.abs(a);if(n>=180){for(var i=n/180,o=a/i,s=r+o,u=e.times[t-1],l=e.times[t]-u,c=l/i,p=u+c,f=[],h=[];p<e.times[t];)f.push(p),p+=c,h.push(s),s+=o;e.times=y(e.times,t,f),e.values=y(e.values,t,h)}}}},n.prototype={constructor:n,getPrevNode:function(){return this.nodeStack[this.currentIndent-2]},getCurrentNode:function(){return this.nodeStack[this.currentIndent-1]},getCurrentProp:function(){return this.currentProp},pushStack:function(e){this.nodeStack.push(e),this.currentIndent+=1},popStack:function(){this.nodeStack.pop(),this.currentIndent-=1},setCurrentProp:function(e,t){this.currentProp=e,this.currentPropName=t},parse:function(e){this.currentIndent=0,this.allNodes=new s,this.nodeStack=[],this.currentProp=[],this.currentPropName="";var t=this,r=e.split(/[\r\n]+/);return r.forEach(function(e,a){var n=e.match(/^[\s\t]*;/),i=e.match(/^[\s\t]*$/);if(!n&&!i){var o=e.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),s=e.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=e.match("^\\t{"+(t.currentIndent-1)+"}}");o?t.parseNodeBegin(e,o):s?t.parseNodeProperty(e,s,r[++a]):u?t.popStack():e.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(e)}}),this.allNodes},parseNodeBegin:function(e,t){var r=t[1].trim().replace(/^"/,"").replace(/"$/,""),a=t[2].split(",").map(function(e){return e.trim().replace(/^"/,"").replace(/"$/,"")}),n={name:r},i=this.parseNodeAttr(a),o=this.getCurrentNode();0===this.currentIndent?this.allNodes.add(r,n):r in o?("PoseNode"===r?o.PoseNode.push(n):void 0!==o[r].id&&(o[r]={},o[r][o[r].id]=o[r]),""!==i.id&&(o[r][i.id]=n)):"number"==typeof i.id?(o[r]={},o[r][i.id]=n):"Properties70"!==r&&(o[r]="PoseNode"===r?[n]:n),"number"==typeof i.id&&(n.id=i.id),""!==i.name&&(n.attrName=i.name),""!==i.type&&(n.attrType=i.type),this.pushStack(n)},parseNodeAttr:function(e){var t=e[0];""!==e[0]&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));var r="",a="";return e.length>1&&(r=e[1].replace(/^(\w+)::/,""),a=e[2]),{id:t,name:r,type:a}},parseNodeProperty:function(e,t,r){var a=t[1].replace(/^"/,"").replace(/"$/,"").trim(),n=t[2].replace(/^"/,"").replace(/"$/,"").trim();"Content"===a&&","===n&&(n=r.replace(/"/g,"").replace(/,$/,"").trim());var i=this.getCurrentNode();if("Properties70"===i.name)return void this.parseNodeSpecialProperty(e,a,n);if("C"===a){var o=n.split(",").slice(1),s=parseInt(o[0]),u=parseInt(o[1]),l=n.split(",").slice(3);l=l.map(function(e){return e.trim().replace(/^"/,"")}),a="connections",n=[s,u],g(n,l),void 0===i[a]&&(i[a]=[])}"Node"===a&&(i.id=n),a in i&&Array.isArray(i[a])?i[a].push(n):"a"!==a?i[a]=n:i.a=n,this.setCurrentProp(i,a),"a"===a&&","!==n.slice(-1)&&(i.a=v(n))},parseNodePropertyContinued:function(e){var t=this.getCurrentNode();t.a+=e,","!==e.slice(-1)&&(t.a=v(t.a))},parseNodeSpecialProperty:function(e,t,r){var a=r.split('",').map(function(e){return e.trim().replace(/^\"/,"").replace(/\s/,"_")}),n=a[0],i=a[1],o=a[2],s=a[3],u=a[4];switch(i){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":u=parseFloat(u);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":u=v(u)}this.getPrevNode()[n]={type:i,type2:o,flag:s,value:u},this.setCurrentProp(this.getPrevNode(),n)}},i.prototype={constructor:i,parse:function(e){var t=new o(e);t.skip(23);var r=t.getUint32();if(r<6400)throw new Error("THREE.FBXLoader: FBX version "+r+" not supported, Requires FBX file to be >= 7.0  in ASCII [format] or >= 6400 in Binary format");console.log("THREE.FBXLoader: FBX binary version: "+r);for(var a=new s;!this.endOfContent(t);){var n=this.parseNode(t,r);null!==n&&a.add(n.name,n)}return a},endOfContent:function(e){return e.size()%16==0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()},parseNode:function(e,t){var r={},a=t>=7500?e.getUint64():e.getUint32(),n=t>=7500?e.getUint64():e.getUint32(),i=(t>=7500?e.getUint64():e.getUint32(),e.getUint8()),o=e.getString(i);if(0===a)return null;for(var s=[],u=0;u<n;u++)s.push(this.parseProperty(e));var l=s.length>0?s[0]:"",c=s.length>1?s[1]:"",p=s.length>2?s[2]:"";for(r.singleProperty=1===n&&e.getOffset()===a;a>e.getOffset();){var f=this.parseNode(e,t);null!==f&&this.parseSubNode(o,r,f)}return r.propertyList=s,"number"==typeof l&&(r.id=l),""!==c&&(r.attrName=c),""!==p&&(r.attrType=p),""!==o&&(r.name=o),r},parseSubNode:function(e,t,r){if(!0===r.singleProperty){var a=r.propertyList[0];Array.isArray(a)?(t[r.name]=r,r.a=a):t[r.name]=a}else if("Connections"===e&&"C"===r.name){var n=[];r.propertyList.forEach(function(e,t){0!==t&&n.push(e)}),void 0===t.connections&&(t.connections=[]),t.connections.push(n)}else if("Properties70"===r.name){var i=Object.keys(r);i.forEach(function(e){t[e]=r[e]})}else if("Properties70"===e&&"P"===r.name){var o,s=r.propertyList[0],u=r.propertyList[1],l=r.propertyList[2],c=r.propertyList[3];0===s.indexOf("Lcl ")&&(s=s.replace("Lcl ","Lcl_")),0===u.indexOf("Lcl ")&&(u=u.replace("Lcl ","Lcl_")),o="Color"===u||"ColorRGB"===u||"Vector"===u||"Vector3D"===u||0===u.indexOf("Lcl_")?[r.propertyList[4],r.propertyList[5],r.propertyList[6]]:r.propertyList[4],t[s]={type:u,type2:l,flag:c,value:o}}else void 0===t[r.name]?"number"==typeof r.id?(t[r.name]={},t[r.name][r.id]=r):t[r.name]=r:"PoseNode"===r.name?(Array.isArray(t[r.name])||(t[r.name]=[t[r.name]]),t[r.name].push(r)):void 0===t[r.name][r.id]&&(t[r.name][r.id]=r)},parseProperty:function(e){var t=e.getString(1);switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":var r=e.getUint32();return e.getArrayBuffer(r);case"S":var r=e.getUint32();return e.getString(r);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":var a=e.getUint32(),n=e.getUint32(),i=e.getUint32();if(0===n)switch(t){case"b":case"c":return e.getBooleanArray(a);case"d":return e.getFloat64Array(a);case"f":return e.getFloat32Array(a);case"i":return e.getInt32Array(a);case"l":return e.getInt64Array(a)}"undefined"==typeof Zlib&&console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");var s=new Zlib.Inflate(new Uint8Array(e.getArrayBuffer(i))),u=new o(s.decompress().buffer);switch(t){case"b":case"c":return u.getBooleanArray(a);case"d":return u.getFloat64Array(a);case"f":return u.getFloat32Array(a);case"i":return u.getInt32Array(a);case"l":return u.getInt64Array(a)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}},o.prototype={constructor:o,getOffset:function(){return this.offset},size:function(){return this.dv.buffer.byteLength},skip:function(e){this.offset+=e},getBoolean:function(){return 1==(1&this.getUint8())},getBooleanArray:function(e){for(var t=[],r=0;r<e;r++)t.push(this.getBoolean());return t},getUint8:function(){var e=this.dv.getUint8(this.offset);return this.offset+=1,e},getInt16:function(){var e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e},getInt32:function(){var e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e},getInt32Array:function(e){for(var t=[],r=0;r<e;r++)t.push(this.getInt32());return t},getUint32:function(){var e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e},getInt64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),2147483648&t?(t=4294967295&~t,e=4294967295&~e,4294967295===e&&(t=t+1&4294967295),e=e+1&4294967295,-(4294967296*t+e)):4294967296*t+e},getInt64Array:function(e){for(var t=[],r=0;r<e;r++)t.push(this.getInt64());return t},getUint64:function(){var e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),4294967296*t+e},getFloat32:function(){var e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e},getFloat32Array:function(e){for(var t=[],r=0;r<e;r++)t.push(this.getFloat32());return t},getFloat64:function(){var e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e},getFloat64Array:function(e){for(var t=[],r=0;r<e;r++)t.push(this.getFloat64());return t},getArrayBuffer:function(e){var t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t},getString:function(e){for(var t=[],r=0;r<e;r++)t[r]=this.getUint8();var a=t.indexOf(0);return a>=0&&(t=t.slice(0,a)),(new TextDecoder).decode(new Uint8Array(t))}},s.prototype={constructor:s,add:function(e,t){this[e]=t}};var I=[],x=new THREE.Euler,b=new THREE.Vector3;return e}();